version: 2.1

jobs:
  multi-image-fun:
    parameters:
      name-postgres:
        type: string
        default: postgres
      name-nginx:
        type: string
        default: nginx
    docker:
      - image: cimg/base:stable
        name: primary
      - image: postgres:14.2
        name: << parameters.name-postgres >>
        environment:
          POSTGRES_PASSWORD: foobar
          POSTGRES_USER: johndoe
          POSTGRES_DB: loremipsum
      - image: nginx:latest
        name: << parameters.name-nginx >>
          
    resource_class: medium
    steps:
      - run:
          name: Wait for services
          command: |
            # docker.io/library/postgres:14.2 exposes its port at 5432
            # To confirm:
            #    $ docker inspect docker.io/library/nginx:latest | jq ".[0].Config.ExposedPorts"
            #    {
            #      "80/tcp": {}
            #    }
            dockerize -wait http://<< parameters.name-nginx >>:80 -wait-retry-interval 3s -timeout 60s
            # docker.io/library/postgres:14.2 exposes its port at 5432
            # To confirm:
            #    $ docker inspect docker.io/library/postgres:14.2 | jq ".[0].Config.ExposedPorts"
            #    {
            #      "5432/tcp": {}
            #    }
            dockerize -wait tcp://<< parameters.name-postgres >>:5432 -wait-retry-interval 3s -timeout 60s
      - run:
          name: Confirm if subdomain works
          command: |
            curl http://<< parameters.name-nginx >>:80
            
            curl http://subdomain.<< parameters.name-nginx >>:80 || true
            

workflows:
  main:
    jobs:
      - multi-image-fun:
          name: container-names
      - multi-image-fun:
          name: localhost
          name-postgres: localhost
          name-nginx: localhost
